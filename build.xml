<?xml version="1.0" encoding="UTF-8"?>
<!-- =================================
    Introduction to Service Design and Engineering Laboratory
    Description: Build file for the first assignment
    Author: Andrea Galloni - andreagalloni92[googlemail][dot]com

    Notes:

    * This build file includes targets to download and install in your local project the Apache IVY jar
    * IVY is used to manage dependencies on projects
    *

-->
<project name="GalloniAndreaAssignment1" default="compile" basedir="src" xmlns:ivy="antlib:org.apache.ivy.ant">

    <!-- PART 1: Ivy properties, download, installation and configuration -->
    <property name="ivy.install.version" value="2.4.0-rc1" />
    <property name="ivy.jar.dir" value="${basedir}/ivy" />
    <property name="ivy.jar.file" value="${ivy.jar.dir}/ivy.jar" />

    <!-- this targe will donwload ivy.jar if its inot in the "ivy" folder yet -->
    <target name="download-ivy" unless="skip.download">
        <mkdir dir="${ivy.jar.dir}"/>
        <!-- download Ivy from web site so that it can be used even without any special installation -->
        <echo message="installing ivy..."/>
        <get src="http://repo1.maven.org/maven2/org/apache/ivy/ivy/${ivy.install.version}/ivy-${ivy.install.version}.jar" dest="${ivy.jar.file}" usetimestamp="true"/>
    </target>

    <!-- Check if ivy is installed, if it is not installed it will download it (look at the "depends="download-ivy"" attribute) -->

    <target name="install-ivy" depends="download-ivy" description="--> install ivy">
        <!--
             try to load ivy here from local ivy dir, in case the user has not already dropped
                          it into ant's lib dir (note that the latter copy will always take precedence).
                          We will not fail as long as local lib dir exists (it may be empty) and
                          ivy is in at least one of ant's lib dir or the local lib dir.
            -->
        <path id="ivy.lib.path">
            <fileset dir="${ivy.jar.dir}" includes="*.jar"/>
        </path>
        <taskdef resource="org/apache/ivy/ant/antlib.xml" uri="antlib:org.apache.ivy.ant" classpathref="ivy.lib.path"/>
    </target>

    <!--  General folders and properties definitions -->
    <property name="build.dir" value="build" />
    <property name="src.dir" value="." />
    <property name="lib.dir" value="lib" />
    <property name="xjc.package" value="assignment.generated" />

    <!-- =================================
          target: resolve downloads the dependencies to your lib folder
         ================================= -->
    <target name="resolve" depends="install-ivy" description="--> retrieve dependencies with ivy">
        <ivy:retrieve pattern="${lib.dir}/[artifact]-[type]-[revision].[ext]"/>
    </target>

    <!-- paths where ivy libraries will be downloaded, use them as classpathref in your compilation and running tasks  -->
    <path id="lib.path.id">
        <fileset dir="${lib.dir}" />
    </path>


    <path id="run.path.id">
        <path refid="lib.path.id" />
        <fileset dir="${build.dir}">
            <include name="*.class" />
            <include name="**/*.class" />
            <exclude name="**/*Test*" />
        </fileset>
    </path>

    <target name="init" depends="install-ivy, resolve">
        <echo message="Init has been called" />
        <mkdir dir="${build.dir}" />
        <echo message="${build.dir} has been created" />
    </target>

    <!-- generates automatically classes with xjc tool -->

    <target name="generate" depends="init">
        <taskdef name="xjc" classname="com.sun.tools.xjc.XJCTask" classpathref="lib.path.id">
        </taskdef>
        <xjc schema="people.xsd" destdir="${src.dir}" package="${xjc.package}" />
    </target>

    <!-- generates automatically classes with xjc tool -->

    <target name="compile" depends="init, generate">
        <echo message="Compile target has been called" />
        <javac srcdir="${src.dir}" destdir="${build.dir}" classpathref="lib.path.id" includeAntRuntime="false">
        </javac>
        <copy todir="${build.dir}" overwrite="true">
            <fileset dir="${src.dir}">
                <include name="*.xml" />
            </fileset>
        </copy>
    </target>

    <!-- executes JAXBMarshaller class  -->

    <target name="execute.JAXBMarshaller">
        <echo message="Executing JAXBMarshaller" />
        <java classname="assignment.Marshaller" classpath="${build.dir}">
            <classpath>
                <fileset dir="${lib.dir}">
                    <include name="**/*.jar" />
                    <include name="*.jar" />
                </fileset>
            </classpath>
        </java>
    </target>

    <!-- executes JAXBMarshaller class  -->


    <target name="execute.UnMarshaller">
        <echo message="Executing UnMarshaller" />
        <java classname="assignment.UnMarshaller" classpath="${build.dir}">
            <classpath>
                <fileset dir="${lib.dir}">
                    <include name="**/*.jar" />
                    <include name="*.jar" />
                </fileset>
            </classpath>
        </java>
    </target>

</project>